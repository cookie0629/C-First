name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build doxygen

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install ninja doxygen.install -y

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        pip install conan

    - name: Conan profile detect
      run: conan profile detect --force

    - name: Conan install dependencies
      run: |
        conan install . --output-folder=build --build=missing -s build_type=${{ matrix.build_type }}

    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CXX_STANDARD=20 -G Ninja

    - name: Build
      run: |
        cmake --build build --config ${{ matrix.build_type }}

    - name: Run tests
      run: |
        cd build && ctest --output-on-failure

    - name: Generate Doxygen documentation
      run: |
        cmake --build build --target docs

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}
        path: build/test_results.xml

    - name: Upload documentation
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docs-${{ matrix.os }}
        path: build/docs